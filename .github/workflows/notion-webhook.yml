name: Notion Webhook
on:
  repository_dispatch:
    types: [notion-update]
  workflow_dispatch:
    inputs:
      pr_title:
        description: 'Pull Request Title'
        default: 'Notion content update'
        required: false
        type: string
      pr_body:
        description: 'Pull Request Description'
        default: 'This PR contains updates from Notion that were triggered by a webhook.'
        required: false
        type: string

# Required permissions for creating PRs with GitHub CLI
permissions:
  contents: write
  pull-requests: write

jobs:
  notion-pull:
    name: Pull from Notion and Create PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Set PR variables
        id: pr_vars
        run: |
          # Set default values
          PR_TITLE="Notion content update"
          PR_BODY="This PR contains updates from Notion that were triggered by a webhook."
          
          # Override with workflow_dispatch inputs if available
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ ! -z "${{ inputs.pr_title }}" ]; then
              PR_TITLE="${{ inputs.pr_title }}"
            fi
            if [ ! -z "${{ inputs.pr_body }}" ]; then
              PR_BODY="${{ inputs.pr_body }}"
            fi
          fi
          
          # Override with repository_dispatch client_payload if available
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            if [ ! -z "${{ github.event.client_payload.pr_title }}" ]; then
              PR_TITLE="${{ github.event.client_payload.pr_title }}"
            fi
            if [ ! -z "${{ github.event.client_payload.pr_body }}" ]; then
              PR_BODY="${{ github.event.client_payload.pr_body }}"
            fi
          fi
          
          # Set output variables (escaping newlines for multi-line body)
          echo "title=$PR_TITLE" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Pull from Notion
        env:
          DOCU_NOTION_INTEGRATION_TOKEN: ${{ secrets.DOCU_NOTION_INTEGRATION_TOKEN }}
          DOCU_NOTION_ROOT_PAGE: ${{ secrets.DOCU_NOTION_ROOT_PAGE }}
        run: pnpm pull-notion
      - name: Check for changes
        id: changes
        run: |
          git add -A
          git diff --staged --exit-code && echo "has_changes=false" >> $GITHUB_OUTPUT || echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Current changes:"
          git status
      - name: Create Branch and PR
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Create and push branch
          BRANCH_NAME="notion-update-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          git commit -m "Update content from Notion"
          git push origin $BRANCH_NAME
          
          # Create PR using GitHub CLI
          gh pr create \
            --title "${{ steps.pr_vars.outputs.title }}" \
            --body "${{ steps.pr_vars.outputs.body }}" \
            --base main \
            --head $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
